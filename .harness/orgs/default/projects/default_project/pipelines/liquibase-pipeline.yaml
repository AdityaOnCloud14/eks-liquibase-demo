pipeline:
  name: Liquibase Dev Deployment
  identifier: LiquibaseDevDeployment
  orgIdentifier: default
  projectIdentifier: default_project
  variables:
    - name: OperationType
      type: String
      default: update
      value: update
      allowedValues:
        - update
        - rollbackCount
    - name: RollbackCount
      type: String
      default: "1"
      value: "1"
    - name: GitBranch
      type: String
      default: main
      value: main
    - name: TargetDB
      type: String
      default: demo_db
      value: demo_db
  stages:
    - stage:
        name: LiquibaseDevMigration
        identifier: LiquibaseDev
        type: Deployment
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Abort
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: liquibase_service
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: LiquibaseJobTemplate
                        type: KubernetesManifest
                        spec:
                          store:
                            type: Git
                            spec:
                              connectorRef: github_connector
                              gitFetchType: Branch
                              branch: <+pipeline.variables.GitBranch>
                              paths:
                                - manifests/liquibase-job-template.yaml
                          skipResourceVersioning: true
          environment:
            environmentRef: dev
            deployToAll: false
            infrastructureDefinition:
              identifier: eks_infra_dev
          execution:
            steps:
              - step:
                  name: GenerateManifest
                  identifier: GenerateManifest
                  type: ShellScript
                  timeout: 10m
                  spec:
                    shell: Bash
                    onDelegate: true
                    environmentVariables:
                      - name: DB_HOST
                        type: Secret
                        value: <+secrets.getValue('DB_HOST')>
                      - name: DB_USER
                        type: Secret
                        value: <+secrets.getValue('DB_USER')>
                      - name: DB_PASS
                        type: Secret
                        value: <+secrets.getValue('DB_PASS')>
                      - name: TARGET_DB
                        type: String
                        value: <+pipeline.variables.TargetDB>
                      - name: GIT_BRANCH
                        type: String
                        value: <+pipeline.variables.GitBranch>
                      - name: OPERATION_TYPE
                        type: String
                        value: <+pipeline.variables.OperationType>
                      - name: ROLLBACK_COUNT
                        type: String
                        value: <+pipeline.variables.RollbackCount>
                    outputVariables:
                      - name: LIQUIBASE_JOB_NAME
                        type: String
                        value: <+execution.outputVariables.LIQUIBASE_JOB_NAME>
                    source:
                      type: Inline
                      spec:
                        script: |
                          echo "Cloning repo..."
                          rm -rf repo
                          git clone https://github.com/AdityaOnCloud14/eks-liquibase-demo.git repo
                          cp repo/manifests/liquibase-job-template.yaml ci_manifest.yaml

                          sed -i "s|__DB_HOST__|$DB_HOST|g" ci_manifest.yaml
                          sed -i "s|__DB_USER__|$DB_USER|g" ci_manifest.yaml
                          sed -i "s|__DB_PASS__|$DB_PASS|g" ci_manifest.yaml
                          sed -i "s|__TARGET_DB__|$TARGET_DB|g" ci_manifest.yaml
                          sed -i "s|__GIT_BRANCH__|$GIT_BRANCH|g" ci_manifest.yaml

                          if [ "$OPERATION_TYPE" = "rollbackCount" ]; then
                            sed -i "s|__LIQUIBASE_COMMAND__|rollbackCount $ROLLBACK_COUNT|g" ci_manifest.yaml
                          else
                            sed -i "s|__LIQUIBASE_COMMAND__|update|g" ci_manifest.yaml
                          fi

                          NAME=$(grep 'name:' ci_manifest.yaml | head -1 | awk '{print $2}')
                          echo "LIQUIBASE_JOB_NAME=$NAME"
              - step:
                  name: ApplyLiquibaseJob
                  identifier: ApplyLiquibaseJob
                  type: K8sApply
                  timeout: 10m
                  spec:
                    filePaths:
                      - ci_manifest.yaml
                    skipDryRun: false
                    skipSteadyStateCheck: false
              - step:
                  name: WaitForCompletion
                  identifier: WaitForCompletion
                  type: ShellScript
                  timeout: 5m
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |
                          echo "Waiting for job to complete..."
                          kubectl wait --for=condition=complete job/$LIQUIBASE_JOB_NAME -n liquibase-demo --timeout=300s
                          POD=$(kubectl get pods -n liquibase-demo -l job-name=$LIQUIBASE_JOB_NAME -o jsonpath="{.items[0].metadata.name}")
                          echo "Logs for job $LIQUIBASE_JOB_NAME:"
                          kubectl logs $POD -n liquibase-demo
              - step:
                  name: CleanupLiquibaseJob
                  identifier: CleanupLiquibaseJob
                  type: K8sDelete
                  timeout: 10m
                  when:
                    stageStatus: All
                  spec:
                    deleteResources:
                      names:
                        - Job/<+step.GenerateManifest.output.LIQUIBASE_JOB_NAME>
                    skipDryRun: false
                    skipSteadyStateCheck: false
