apiVersion: batch/v1
kind: Job
metadata:
  name: liquibase-job
  namespace: liquibase-demo
  labels:
    app: liquibase-migrator
spec:
  backoffLimit: 5              
  #ttlSecondsAfterFinished: 300 
  template:
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: changelog-volume
          emptyDir: {}         
      initContainers:
        - name: git-clone
          image: alpine/git:latest
          imagePullPolicy: IfNotPresent
          args:
            - clone
            - --depth=1
            - --single-branch
            - -b
            - feature/newpipeline
            - "https://github.com/AdityaOnCloud14/eks-liquibase-demo.git"
            - "/workspace"
          volumeMounts:
            - name: changelog-volume
              mountPath: /workspace
      containers:
        - name: liquibase
          image: liquibase/liquibase:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              value: "__DB_HOST__"
            - name: DB_NAME
              value: "__DB_NAME__"
            - name: DB_USER
              value: "__DB_USER__"
            - name: DB_PASS
              value: "__DB_PASS__"
          volumeMounts:
            - name: changelog-volume
              mountPath: /workspace
          workingDir: /workspace
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              HOST="$DB_HOST"
              NAME="$DB_NAME"
              TARGET_DB="__TARGET_DB__"
              if [ "$TARGET_DB" != "__TARGET_DB__" ]; then
                NAME="$TARGET_DB"
              fi
              USER="$DB_USER"
              PASS="$DB_PASS"
              JDBC_URL="jdbc:postgresql://${HOST}:5432/${NAME}"
              echo "Running Liquibase command against ${JDBC_URL}"
              cd /workspace/liquibase
              liquibase --url="$JDBC_URL" --username="$USER" --password="$PASS" --changeLogFile=db.changelog-master.xml __LIQUIBASE_COMMAND__
