apiVersion: batch/v1
kind: Job
metadata:
  name: liquibase-job
  namespace: liquibase-demo
  labels:
    app: liquibase-migrator
spec:
  backoffLimit: 0              # Fail fast if the job fails
  ttlSecondsAfterFinished: 300 # Clean up job resources 5 minutes after finish
  template:
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: changelog-volume
          emptyDir: {}         # Ephemeral volume for both init & main containers
      initContainers:
        - name: git-clone
          image: alpine/git:latest
          imagePullPolicy: IfNotPresent
          args:
            - clone
            - --depth=1
            - --single-branch
            - "https://github.com/AdityaOnCloud14/eks-liquibase-demo.git"
            - "/workspace"
          volumeMounts:
            - name: changelog-volume
              mountPath: /workspace
      containers:
        - name: liquibase
          image: liquibase/liquibase:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_PASS
          volumeMounts:
            - name: changelog-volume
              mountPath: /workspace
          workingDir: /workspace
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              # Capture environment variables into local shell variables
              HOST="$DB_HOST"
              NAME="$DB_NAME"
              USER="$DB_USER"
              PASS="$DB_PASS"
              JDBC_URL="jdbc:postgresql://${HOST}:5432/${NAME}"
              echo "Running Liquibase command against ${JDBC_URL}"
              # Navigate to the liquibase folder (adjust if your repo structure is different)
              cd /workspace/liquibase
              # Run Liquibase with the substituted command (the placeholder will be replaced by your pipeline)
              liquibase --url="$JDBC_URL" --username="$USER" --password="$PASS" --changeLogFile=db.changelog-master.xml __LIQUIBASE_COMMAND__
